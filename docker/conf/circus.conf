[circus]
check_delay = 5
endpoint = tcp://127.0.0.1:5555
pubsub_endpoint = tcp://127.0.0.1:5556
umask = 002
working_dir = $(CIRCUS.ENV.PWD)
debug = false
stdout_stream.class = StdoutStream
stderr_stream.class = StdoutStream

# [watcher:web]
# cmd = nginx
# args = -c /conf/nginx.conf
# user = www
# group = sos
# use_sockets = True
# copy_env = true
# autostart = $(CIRCUS.ENV.INIT_START_WEB)

[watcher:bob]
cmd = uwsgi
args = --ini /conf/uwsgi.ini
user = www
group = bitcaster
use_sockets = True
copy_env = true
autostart = $(CIRCUS.ENV.INIT_START_BOB)
numprocesses = 1
send_hup = True
stop_signal = QUIT
warmup_delay = 0

# [watcher:clearly]
# cmd = clearly
# args = server  $(CIRCUS.ENV.CELERY_BROKER_URL) -p $(CIRCUS.ENV.CLEARLY_PORT)
# user = www
# group = sos
# use_sockets = True
# copy_env = true
# autostart = $(CIRCUS.ENV.INIT_START_CLEARLY)


[watcher:daphne]
cmd = daphne
args = -b 0.0.0.0 -p 8001 bitcaster.config.asgi:application
user = www
group = bitcaster
copy_env = true
autostart = $(CIRCUS.ENV.INIT_START_DAPHNE)

[watcher:celery-worker]
cmd = celery
args = -A bitcaster.config.celery worker -E --loglevel=ERROR --concurrency=4 --uid www --gid sos
user = www
group = bitcaster
copy_env = true
autostart = $(CIRCUS.ENV.INIT_START_CELERY)
warmup_delay = 0

[watcher:celery-beat]
cmd = celery
args = -A bitcaster.config.celery beat --loglevel=ERROR --scheduler django_celery_beat.schedulers:DatabaseScheduler
user = www
group = bitcaster
copy_env = true
autostart = $(CIRCUS.ENV.INIT_START_BEAT)

[watcher:flower]
cmd = celery
args = -A bitcaster.config.celery -b ${CIRCUS.ENV.CELERY_BROKER_URL} flower --loglevel=ERROR --auth='.*@os4d\.org' --url-prefix=flower --purge-offline-workers=3600
user = www
group = bitcaster
copy_env = true
autostart = $(CIRCUS.ENV.INIT_START_FLOWER)
